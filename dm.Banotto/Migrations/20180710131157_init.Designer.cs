// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dm.Banotto.Data;

namespace dm.Banotto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180710131157_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("dm.Banotto.Models.Bet", b =>
                {
                    b.Property<int>("BetId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<int>("BetType");

                    b.Property<bool?>("Confirmed");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("IsQuick");

                    b.Property<int?>("Pick1");

                    b.Property<int?>("Pick2");

                    b.Property<int?>("Pick3");

                    b.Property<int>("PlayType");

                    b.Property<int>("RoundId");

                    b.Property<ulong>("UserBetMessageId");

                    b.Property<ulong>("UserId");

                    b.Property<bool?>("Winner");

                    b.HasKey("BetId");

                    b.HasIndex("RoundId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("dm.Banotto.Models.Round", b =>
                {
                    b.Property<int>("RoundId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Completed");

                    b.Property<DateTime>("Created");

                    b.Property<ulong>("DealerId");

                    b.Property<DateTime?>("Ends");

                    b.Property<int?>("Roll1");

                    b.Property<int?>("Roll2");

                    b.Property<int?>("Roll3");

                    b.Property<string>("RollHash");

                    b.Property<string>("RollSalt");

                    b.Property<int>("RoundStatus");

                    b.Property<int>("RoundType");

                    b.Property<int?>("TotalAmount");

                    b.Property<int?>("TotalAnyWinners");

                    b.Property<int?>("TotalBets");

                    b.Property<int?>("TotalSingleWinners");

                    b.Property<int?>("TotalStraightWinners");

                    b.Property<int?>("TotalWinners");

                    b.HasKey("RoundId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("dm.Banotto.Models.Bet", b =>
                {
                    b.HasOne("dm.Banotto.Models.Round", "Round")
                        .WithMany("Bets")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
